# Generated by Django 4.1.7 on 2023-04-24 11:42

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('comment', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('birth_date', models.IntegerField()),
                ('e_mail', models.EmailField(max_length=50)),
                ('phone', models.IntegerField()),
                ('city', models.CharField(max_length=20)),
                ('telegram_nickname', models.CharField(max_length=30)),
                ('youtrack_login', models.CharField(max_length=5)),
                ('edu_lvl', models.CharField(max_length=5)),
                ('edu_university', models.CharField(max_length=5)),
                ('edu_spec', models.CharField(max_length=20)),
                ('resume_title', models.CharField(max_length=20)),
                ('cover_letter_text', models.CharField(max_length=5)),
                ('skills', models.CharField(max_length=5)),
                ('skills_detailed', models.CharField(max_length=5)),
                ('role', models.CharField(max_length=15)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Intern',
                'verbose_name_plural': 'Intern',
                'db_table': 'intern',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('sum', models.IntegerField()),
                ('comment', models.CharField(max_length=100)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='interns.user')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField()),
                ('invite_reason', models.CharField(max_length=64)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interns.group')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='interns.person')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(through='interns.Membership', to='interns.person'),
        ),
    ]
